package com.pilipili.model;

import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pilipili.model.base.BaseUser;

import java.io.IOException;
import java.io.StringReader;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class User extends BaseUser<User> {
    public static final String ID = "id";
    public static final String ACCOUNT = "account";
    public static final String PASSWORD = "password";
    public static final String AVATAR_URL = "avatarUrl";
    public static final String NAME = "name";
    public static final String SEX = "sex";
    public static final String SIGN = "sign";

    public static final User dao = new User().dao();

    public static JsonWriter toJson(User user, JsonWriter jsonWriter) throws IOException {
        if (user == null || jsonWriter == null) {
            return jsonWriter;
        }

        return jsonWriter
                .beginObject()
                .name(ID).value(user.getId())
                .name(ACCOUNT).value(user.getAccount())
                .name(PASSWORD).value(user.getPassword())
                .name(AVATAR_URL).value(user.getAvatarUrl())
                .name(NAME).value(user.getName())
                .name(SEX).value(user.getSex())
                .name(SIGN).value(user.getSign())
                .endObject();
    }

    public static User fromJson(String json) throws IOException {
        if (json == null) {
            return null;
        }

        JsonReader jsonReader = new JsonReader(new StringReader(json));
        jsonReader.beginObject();
        User user = new User();
        while (jsonReader.hasNext()) {
            switch (jsonReader.nextName()) {
                case ID: {
                    user.setId(jsonReader.nextLong());
                    break;
                }
                case ACCOUNT: {
                    user.setAccount(jsonReader.nextString());
                    break;
                }
                case PASSWORD: {
                    user.setPassword(jsonReader.nextString());
                    break;
                }
                case AVATAR_URL: {
                    user.setAvatarUrl(jsonReader.nextString());
                    break;
                }
                case NAME: {
                    user.setName(jsonReader.nextString());
                    break;
                }
                case SEX: {
                    user.setSex(jsonReader.nextInt());
                    break;
                }
                case SIGN: {
                    user.setSign(jsonReader.nextString());
                    break;
                }
                default: {
                    jsonReader.skipValue();
                    break;
                }
            }
        }
        jsonReader.endObject();
        jsonReader.close();

        return user;
    }
}
